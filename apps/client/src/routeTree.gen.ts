/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appRouteImport } from './routes/(app)/route'
import { Route as IndexImport } from './routes/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authLoginIndexImport } from './routes/(auth)/login/index'
import { Route as appSettingsIndexImport } from './routes/(app)/settings/index'
import { Route as appSchuelerIndexImport } from './routes/(app)/schueler/index'
import { Route as appRollenmanagementIndexImport } from './routes/(app)/rollenmanagement/index'
import { Route as appResetPasswordIndexImport } from './routes/(app)/reset-password/index'
import { Route as appKlassenIndexImport } from './routes/(app)/klassen/index'
import { Route as appGanztagsangeboteIndexImport } from './routes/(app)/ganztagsangebote/index'
import { Route as appDashboardIndexImport } from './routes/(app)/dashboard/index'
import { Route as appSchuelerSchuelerIdImport } from './routes/(app)/schueler/$schuelerId'
import { Route as appKlassenKlassenIdImport } from './routes/(app)/klassen/$klassenId'

// Create/Update Routes

const appRouteRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const appSettingsIndexRoute = appSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => appRouteRoute,
} as any)

const appSchuelerIndexRoute = appSchuelerIndexImport.update({
  id: '/schueler/',
  path: '/schueler/',
  getParentRoute: () => appRouteRoute,
} as any)

const appRollenmanagementIndexRoute = appRollenmanagementIndexImport.update({
  id: '/rollenmanagement/',
  path: '/rollenmanagement/',
  getParentRoute: () => appRouteRoute,
} as any)

const appResetPasswordIndexRoute = appResetPasswordIndexImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => appRouteRoute,
} as any)

const appKlassenIndexRoute = appKlassenIndexImport.update({
  id: '/klassen/',
  path: '/klassen/',
  getParentRoute: () => appRouteRoute,
} as any)

const appGanztagsangeboteIndexRoute = appGanztagsangeboteIndexImport.update({
  id: '/ganztagsangebote/',
  path: '/ganztagsangebote/',
  getParentRoute: () => appRouteRoute,
} as any)

const appDashboardIndexRoute = appDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => appRouteRoute,
} as any)

const appSchuelerSchuelerIdRoute = appSchuelerSchuelerIdImport.update({
  id: '/schueler/$schuelerId',
  path: '/schueler/$schuelerId',
  getParentRoute: () => appRouteRoute,
} as any)

const appKlassenKlassenIdRoute = appKlassenKlassenIdImport.update({
  id: '/klassen/$klassenId',
  path: '/klassen/$klassenId',
  getParentRoute: () => appRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRoute
    }
    '/(app)/klassen/$klassenId': {
      id: '/(app)/klassen/$klassenId'
      path: '/klassen/$klassenId'
      fullPath: '/klassen/$klassenId'
      preLoaderRoute: typeof appKlassenKlassenIdImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/schueler/$schuelerId': {
      id: '/(app)/schueler/$schuelerId'
      path: '/schueler/$schuelerId'
      fullPath: '/schueler/$schuelerId'
      preLoaderRoute: typeof appSchuelerSchuelerIdImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/ganztagsangebote/': {
      id: '/(app)/ganztagsangebote/'
      path: '/ganztagsangebote'
      fullPath: '/ganztagsangebote'
      preLoaderRoute: typeof appGanztagsangeboteIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/klassen/': {
      id: '/(app)/klassen/'
      path: '/klassen'
      fullPath: '/klassen'
      preLoaderRoute: typeof appKlassenIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/reset-password/': {
      id: '/(app)/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof appResetPasswordIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/rollenmanagement/': {
      id: '/(app)/rollenmanagement/'
      path: '/rollenmanagement'
      fullPath: '/rollenmanagement'
      preLoaderRoute: typeof appRollenmanagementIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/schueler/': {
      id: '/(app)/schueler/'
      path: '/schueler'
      fullPath: '/schueler'
      preLoaderRoute: typeof appSchuelerIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/settings/': {
      id: '/(app)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface appRouteRouteChildren {
  appKlassenKlassenIdRoute: typeof appKlassenKlassenIdRoute
  appSchuelerSchuelerIdRoute: typeof appSchuelerSchuelerIdRoute
  appDashboardIndexRoute: typeof appDashboardIndexRoute
  appGanztagsangeboteIndexRoute: typeof appGanztagsangeboteIndexRoute
  appKlassenIndexRoute: typeof appKlassenIndexRoute
  appResetPasswordIndexRoute: typeof appResetPasswordIndexRoute
  appRollenmanagementIndexRoute: typeof appRollenmanagementIndexRoute
  appSchuelerIndexRoute: typeof appSchuelerIndexRoute
  appSettingsIndexRoute: typeof appSettingsIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appKlassenKlassenIdRoute: appKlassenKlassenIdRoute,
  appSchuelerSchuelerIdRoute: appSchuelerSchuelerIdRoute,
  appDashboardIndexRoute: appDashboardIndexRoute,
  appGanztagsangeboteIndexRoute: appGanztagsangeboteIndexRoute,
  appKlassenIndexRoute: appKlassenIndexRoute,
  appResetPasswordIndexRoute: appResetPasswordIndexRoute,
  appRollenmanagementIndexRoute: appRollenmanagementIndexRoute,
  appSchuelerIndexRoute: appSchuelerIndexRoute,
  appSettingsIndexRoute: appSettingsIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/klassen/$klassenId': typeof appKlassenKlassenIdRoute
  '/schueler/$schuelerId': typeof appSchuelerSchuelerIdRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/ganztagsangebote': typeof appGanztagsangeboteIndexRoute
  '/klassen': typeof appKlassenIndexRoute
  '/reset-password': typeof appResetPasswordIndexRoute
  '/rollenmanagement': typeof appRollenmanagementIndexRoute
  '/schueler': typeof appSchuelerIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/klassen/$klassenId': typeof appKlassenKlassenIdRoute
  '/schueler/$schuelerId': typeof appSchuelerSchuelerIdRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/ganztagsangebote': typeof appGanztagsangeboteIndexRoute
  '/klassen': typeof appKlassenIndexRoute
  '/reset-password': typeof appResetPasswordIndexRoute
  '/rollenmanagement': typeof appRollenmanagementIndexRoute
  '/schueler': typeof appSchuelerIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/klassen/$klassenId': typeof appKlassenKlassenIdRoute
  '/(app)/schueler/$schuelerId': typeof appSchuelerSchuelerIdRoute
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(app)/ganztagsangebote/': typeof appGanztagsangeboteIndexRoute
  '/(app)/klassen/': typeof appKlassenIndexRoute
  '/(app)/reset-password/': typeof appResetPasswordIndexRoute
  '/(app)/rollenmanagement/': typeof appRollenmanagementIndexRoute
  '/(app)/schueler/': typeof appSchuelerIndexRoute
  '/(app)/settings/': typeof appSettingsIndexRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/klassen/$klassenId'
    | '/schueler/$schuelerId'
    | '/dashboard'
    | '/ganztagsangebote'
    | '/klassen'
    | '/reset-password'
    | '/rollenmanagement'
    | '/schueler'
    | '/settings'
    | '/login'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/klassen/$klassenId'
    | '/schueler/$schuelerId'
    | '/dashboard'
    | '/ganztagsangebote'
    | '/klassen'
    | '/reset-password'
    | '/rollenmanagement'
    | '/schueler'
    | '/settings'
    | '/login'
    | '/register'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/klassen/$klassenId'
    | '/(app)/schueler/$schuelerId'
    | '/(app)/dashboard/'
    | '/(app)/ganztagsangebote/'
    | '/(app)/klassen/'
    | '/(app)/reset-password/'
    | '/(app)/rollenmanagement/'
    | '/(app)/schueler/'
    | '/(app)/settings/'
    | '/(auth)/login/'
    | '/(auth)/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  authLoginIndexRoute: typeof authLoginIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  authLoginIndexRoute: authLoginIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(auth)/login/",
        "/(auth)/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)": {
      "filePath": "(app)/route.tsx",
      "children": [
        "/(app)/klassen/$klassenId",
        "/(app)/schueler/$schuelerId",
        "/(app)/dashboard/",
        "/(app)/ganztagsangebote/",
        "/(app)/klassen/",
        "/(app)/reset-password/",
        "/(app)/rollenmanagement/",
        "/(app)/schueler/",
        "/(app)/settings/"
      ]
    },
    "/(app)/klassen/$klassenId": {
      "filePath": "(app)/klassen/$klassenId.tsx",
      "parent": "/(app)"
    },
    "/(app)/schueler/$schuelerId": {
      "filePath": "(app)/schueler/$schuelerId.tsx",
      "parent": "/(app)"
    },
    "/(app)/dashboard/": {
      "filePath": "(app)/dashboard/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/ganztagsangebote/": {
      "filePath": "(app)/ganztagsangebote/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/klassen/": {
      "filePath": "(app)/klassen/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/reset-password/": {
      "filePath": "(app)/reset-password/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/rollenmanagement/": {
      "filePath": "(app)/rollenmanagement/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/schueler/": {
      "filePath": "(app)/schueler/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/settings/": {
      "filePath": "(app)/settings/index.tsx",
      "parent": "/(app)"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
